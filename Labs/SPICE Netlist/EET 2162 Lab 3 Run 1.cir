** Lab 3 Run 1 **
* 
* NI Multisim to SPICE Netlist Export
* Generated by: Chris
* Tue, Oct 30, 2018 19:29:48 
*

*## Multisim Component X1 ##*
* !!!BEGIN-INTERACT
*  0.0       VARIABLE pin_index
*  0.0       VARIABLE pin_state
*
*  :ON_USER_UPDATE
*       0 7 0 SET_SUBCOMP_PRP
*       0 8 0 SET_SUBCOMP_PRP
*       0 9 0 SET_SUBCOMP_PRP
*       0 10 0 SET_SUBCOMP_PRP
*       0 11 0 SET_SUBCOMP_PRP
*       0 12 0 SET_SUBCOMP_PRP
*       0 13 0 SET_SUBCOMP_PRP
*       0 14 0 SET_SUBCOMP_PRP
*  ;   
*
*  :OUT_DATA
*   *pin_index GET_REAL_DATA ==>_*pin_state
*   0.9 *pin_state  f.<   if
*       1 7 0 SET_SUBCOMP_PRP
*       1 8 0 SET_SUBCOMP_PRP
*       1 9 0 SET_SUBCOMP_PRP
*       1 10 0 SET_SUBCOMP_PRP
*       1 11 0 SET_SUBCOMP_PRP
*       1 12 0 SET_SUBCOMP_PRP
*       1 13 0 SET_SUBCOMP_PRP
*       1 14 0 SET_SUBCOMP_PRP
*   else
*       0 7 0 SET_SUBCOMP_PRP
*       0 8 0 SET_SUBCOMP_PRP
*       0 9 0 SET_SUBCOMP_PRP
*       0 10 0 SET_SUBCOMP_PRP
*       0 11 0 SET_SUBCOMP_PRP
*       0 12 0 SET_SUBCOMP_PRP
*       0 13 0 SET_SUBCOMP_PRP
*       0 14 0 SET_SUBCOMP_PRP
*   endif
*  ;
*
*  :BEGIN_PLOT
*     GET_NODE_INDEX 1 ==>_*pin_index
*  ;
* !!!END-INTERACT
xX1 3 Probe_digX1
.subckt Probe_digX1 1
a1 1 2 InputBuffer
a2 2 Digload  
.MODEL Digload d_pulldown(load = 1e-12)
.MODEL InputBuffer d_buffer (rise_delay = 1n fall_delay = 1n)
.ends


*## Multisim Component U3 ##*
* !!!BEGIN-INTERACT
*  1.0 constant high
*  0.0 constant low
*  2   constant max_states
*  low VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_MODEL_INSTANCE d_constsource digital_source  a1 state
*  ;
*
*  : INIT_IMOUSE_OPTION
*    1 0 4 IMOUSE_SET
*  ;
*
*  : GET_IMOUSE_SUBCOMPS ( -- [iIdxN ... iIdx1] )
*    1
*  ;
*
*  : ON_SUBCOMP_IMOUSE_EVENT locals| eEventType nOptions iSubCompIdx |
*    eEventType 2 = if
*      -1
*      -1 KEYBOARD_INPUT
*    else
*      0
*    endif
*  ;
*
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*   INIT_IMOUSE_OPTION
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*
*  :BEGIN_ANALYSIS
*    UPDATE_SETTINGS
*  ;
*
* !!!END-INTERACT

xU3 2 digital_sourceU3

.subckt digital_sourceU3 OUT

a1 OUT digital_source
.model digital_source d_constsource(state=0)

.ends


*## Multisim Component U2 ##*
* !!!BEGIN-INTERACT
*  1.0 constant high
*  0.0 constant low
*  2   constant max_states
*  low VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_MODEL_INSTANCE d_constsource digital_source  a1 state
*  ;
*
*  : INIT_IMOUSE_OPTION
*    1 0 4 IMOUSE_SET
*  ;
*
*  : GET_IMOUSE_SUBCOMPS ( -- [iIdxN ... iIdx1] )
*    1
*  ;
*
*  : ON_SUBCOMP_IMOUSE_EVENT locals| eEventType nOptions iSubCompIdx |
*    eEventType 2 = if
*      -1
*      -1 KEYBOARD_INPUT
*    else
*      0
*    endif
*  ;
*
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*   INIT_IMOUSE_OPTION
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*
*  :BEGIN_ANALYSIS
*    UPDATE_SETTINGS
*  ;
*
* !!!END-INTERACT

xU2 1 digital_sourceU2

.subckt digital_sourceU2 OUT

a1 OUT digital_source
.model digital_source d_constsource(state=0)

.ends


*## Multisim Component U1 ##*
aU1  [1 2] 3 XOR2__TIL__1





.MODEL XOR2__TIL__1 d_xor (rise_delay = 1n fall_delay = 1n)


